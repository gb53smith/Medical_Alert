# Medical Alert System
# By: Graham Smith
# Notes:  Tested examples of an automated voice call and a SMS text message using Twilio

homeassistant:
  # Name of the location where Home Assistant is running
  name: !secret name
  # Location required to calculate the time the sun rises and sets
  latitude: !secret latitude
  longitude: !secret longitude
  # Impacts weather/sunrise data (altitude above sea level in meters)
  elevation: !secret elevation
  # metric for Metric, imperial for Imperial
  unit_system: metric
  # Pick yours from here: http://en.wikipedia.org/wiki/List_of_tz_database_time_zones
  time_zone: !secret time_zone

#Needed in place of discovery to get hassio menu
hassio:

system_health:

#For DuckDNS Add-on
http:


twilio:
  account_sid: !secret account_sid
  auth_token: !secret auth_token

notify:
  - name: Medical Alert Call
    platform: twilio_call
    from_number: !secret from_number
  - name: Medical Alert SMS
    platform: twilio_sms
    from_number: !secret from_number

python_script:

# Enables the front end
#frontend:
#javascript_version: es5

# Enables configuration UI
config:

# Checks for available updates
#updater:

# Discover some devices automatically
#discovery:

#Need this only to debug python scripts
# logger:
  # default: info
  # logs:
    # homeassistant.components.python_scripts: debug
    # homeassistant.components.sensor.time: error

# View all events in a logbook
logbook:

# Keep database from growing too large by purging
# Must log automations to restore_state of automations on restart
recorder:
  auto_purge: true
  purge_keep_days: 7
  exclude:
    entities:
      - sensor.time
      - switch.buzzer
      - automation.low_buzzer
      - automation.fast_buzzer

# Enables support for tracking state changes over time.
# Exclude those domains and entities that do not change much 
history:
  exclude:
    domains:
      - automation
      - script
      - input_select
      - input_text
    entities:
      - sensor.time

########## HARDWARE CONNECTIONS #############
# Connect RX480R_4CH module pins to Raspberry PI I/O Pins
#  RX480R_4CH  -> Raspberry PI
#      3.3V    ->      1
#      data1   ->     11
#      data2   ->     12
# Connect Buzzer to Raspberry PI PIN 8.  Transistor driver required
# Alarm is available on Raspberry PI PIN 13 for an LED?
# These are GPIO# not PIN#
# Includes 50 msec debounce
binary_sensor:
  - platform: rpi_gpio
    ports:
      17: on_button
      18: off_button

# Alarm can be canceled by pressing the OFF button before the notify switch
# is triggered after 30 seconds.  After notify is triggered it can be
# canceled by pressing OFF button for 3 seconds or
# Manually sliding the alarm switch OFF from a Web Browser
# On buzzer is a physical connection
# on_sw and off_sw is for testing 
# connect 15 -> 11, 16 -> 12 for testing
# alarm and alive are to store states and have no hardware connections
switch:    
  - platform: rpi_gpio
    ports:
      14: Buzzer
      22: on_sw
      23: off_sw
      5: alarm
      6: alive

# Used to create time trigger on input_datetime
sensor:
  - platform: time_date
    display_options:
      - 'time'

#Note: Use input_text to enter phone numbers with a numeric check

input_select: 
  alarm_cancel:
    name: Alarm Cancel Options
    options:
      - 'OFF'
      - Send Message
  type1:
    name: Type 1
    options:
      - 'OFF'
      - Voice
      - Text
      - Both
  type2:
    name: Type 2
    options:
      - 'OFF'
      - Voice
      - Text
      - Both      
  type3:
    name: Type 3
    options:
      - 'OFF'
      - Voice
      - Text
      - Both      
  type4:
    name: Type 4
    options:
      - 'OFF'
      - Voice
      - Text
      - Both      

input_text:
  cancel_message:
    name: Cancel Message

  contact1:
    name: Contact Name 1  
  phone1:
    name: Phone Number 1
    min: 10
    max: 10
    pattern: '[0-9]*'
  message1:
    name: Help Message 1
    max: 500    

  contact2:
    name: Contact Name 2  
  phone2:
    name: Phone Number 2
    min: 10
    max: 10
    pattern: '[0-9]*'
  message2:
    name: Help Message 2

  contact3:
    name: Contact Name 3  
  phone3:
    name: Phone Number 3
    min: 10
    max: 10
    pattern: '[0-9]*'
  message3:
    name: Help Message 3

  contact4:
    name: Contact Name 4  
  phone4:
    name: Phone Number 4
    min: 10
    max: 10
    pattern: '[0-9]*'
  message4:
    name: Help Message 4

  alive_contact:
    name: Alive Contact  
  phone_alive:
    name: Phone Alive
    min: 10
    max: 10
    pattern: '[0-9]*'
  message_alive:
    name: Alive Message

input_boolean:
  notity_enable:
    name: Notify Enable

input_datetime:
  notify_time:
    name: Notify Time
    has_date: false
    has_time: true    

automation: !include automations.yaml
script: !include scripts.yaml
